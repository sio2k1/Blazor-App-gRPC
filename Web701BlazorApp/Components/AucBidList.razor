@*We use this component to display list of items to bid on*@
@using Web701BlazorApp.Data
@using Web701BlazorApp.State
@using SQLReflectionMapper
@using Web701BlazorApp.Auth
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject StateControl StateControl

<div class="hidden sm:inline md:inline lg:inline xl:inline">
    <table class="table-auto w-full max-w-4xl">
        <thead>
            <tr>
                <th class="px-4 py-2">Item Name</th>
                <th class="px-4 py-2">Supplier</th>
                <th class="px-4 py-2">Category</th>
                <th class="px-4 py-2">Size</th>
                <th class="px-4 py-2">Buy Out Price</th>
                <th class="px-4 py-2">Current Bid</th>
                <th class="px-4 py-2"></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var r in items)
            {
                <AucBidLine item="@r" CurrentUserId="@uid"></AucBidLine>
            }
        </tbody>
    </table>
</div>
<div class="inline sm:hidden md:hidden lg:hidden xl:hidden flex flex-col">
    <div class="inline sm:hidden md:hidden lg:hidden xl:hidden flex flex-col">
        @foreach (var r in items)
        {
            <AucBidLineCard item="@r" CurrentUserId="@uid"></AucBidLineCard>
        }
    </div>
</div>

@code {
    private List<ItemModel> items = new List<ItemModel>();
    private event Action Unsubscribe;
    int uid = -1;
    public async void Reload() //reloads items in list
    {
        try
        {
            items = DBExecuter.SQLRequestSPAutoFillParams("sp_GetItemsForAucList", new ParamList()).Map<ItemModel>();
            uid = await Common.GetCurrentUserId(AuthenticationStateProvider);
        }
        catch (Exception e)
        {
            Console.WriteLine(e.GetBaseException().Message);
        }
        this.StateHasChanged();
    }
    protected override void OnInitialized()
    {
        Reload();
    }
}


