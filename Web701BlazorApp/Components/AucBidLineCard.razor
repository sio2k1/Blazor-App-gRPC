@*Display table row with item for bit for mobile screens*@
@using Web701BlazorApp.Data
@using SQLReflectionMapper
@using System.Globalization
@using System.Threading

@{Thread.CurrentThread.CurrentCulture = new CultureInfo("en-NZ");}
<div class="@visibility">
    <div class="max-w-sm rounded overflow-hidden shadow-md mt-3">
        <div class="px-6 py-4">
            <div class="font-bold text-md mb-2">@item.Name</div>
            <div class="grid grid-cols-2">
                <div class="text-gray-700 text-base">Supplier:</div>
                <div class="text-gray-700 text-base">
                    <NavLink href="@($"grower/{item.MemberUserRecordID}")">
                        <div class="text-sm text-gray-800 hover:text-gray-600 underline">@item.SupplierName</div>
                    </NavLink>
                </div>
                <div class="text-gray-700 text-base">Category:</div>
                <div class="text-gray-700 text-base">@item.Category</div>

                <div class="text-gray-700 text-base">Size:</div>
                <div class="text-gray-700 text-base">@item.Size</div>

                <div class="text-gray-700 text-base">B\O Price:</div>
                <div class="text-gray-700 text-base">@item.BuyOutPrice.ToString("C")</div>

                <div class="text-gray-700 text-base">Current bid:</div>
                <div class="text-gray-700 text-base">@item.CurrentBid.ToString("C")</div>

                <button class="bg-gray-800 hover:bg-gray-600 text-white py-1 px-1 rounded focus:outline-none focus:shadow-outline m-1" @onclick="@(e => PlaceBid(@getBidValue()))">
                    Bid @getBidValue().ToString("C")
                </button>
                <button class="bg-gray-800 hover:bg-gray-600 text-white py-1 px-1 rounded focus:outline-none focus:shadow-outline m-1" @onclick="@(e => PlaceBid(item.BuyOutPrice))">
                    Buy Out @item.BuyOutPrice.ToString("C")
                </button>

            </div>
        </div>

    </div>
</div>
<div class="@confVisibility">
    <ConfirmationMsg Title="Confirmation">Bid placed.<br />Item name: <b>@item.Name</b><br />Bid: <b>$@lastBid</b></ConfirmationMsg>
</div>







@code {
    [Parameter]
    public ItemModel item { get; set; }
    [Parameter]
    public int CurrentUserId { get; set; }

    private string visibility = "";
    private string confVisibility = "hidden";

    private float lastBid = 0;
    private float getBidValue() // auto generate next bid value
    {
        return (item.CurrentBid + 5) > item.BuyOutPrice ? item.BuyOutPrice : (item.CurrentBid + 5);
    }

    async Task HideMsg() // confirmation msg delay b4 hide
    {
        await Task.Delay(8000);
        confVisibility = "hidden";
        this.StateHasChanged();
    }

    public async void PlaceBid(float bid)
    {
        lastBid = bid;
        ParamList p = new ParamList
        {
            ["itemsID"] = item.Id,
            ["clientID"] = CurrentUserId,
            ["bid"] = bid
        };
        try
        {
            DBExecuter.execNonQuerySPAutoFillParams("sp_BidOnItem", p); //place bid
            item.CurrentBid = bid;
            item.ClientUserRecordID = CurrentUserId;
            if (item.CurrentBid == item.BuyOutPrice)
            {
                visibility = "hidden";
            }
            confVisibility = ""; //show confirmation msg
            await HideMsg();
            this.StateHasChanged();
        }
        catch (Exception e)
        {
            Console.WriteLine(e.GetBaseException().Message);
        }
    }

}
